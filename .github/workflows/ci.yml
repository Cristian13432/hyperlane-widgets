name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      yarn-cache-key: ${{ steps.yarn-cache.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache yarn dependencies
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: |
          yarn install --frozen-lockfile
          if [ -n "$(git status --porcelain)" ]; then
            echo "Error: Uncommitted changes detected in yarn.lock or node_modules!"
            git diff
            exit 1
          fi

  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore yarn cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ needs.install.outputs.yarn-cache-key }}

      - name: Build Project
        run: yarn run build

  prettier:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore yarn cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ needs.install.outputs.yarn-cache-key }}

      - name: Check Formatting
        run: |
          yarn run prettier --check .
          if [ -n "$(git status --porcelain)" ]; then
            echo "Error: Code formatting issues detected!"
            exit 1
          fi

  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore yarn cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ needs.install.outputs.yarn-cache-key }}

      - name: Lint Code
        run: yarn run lint
